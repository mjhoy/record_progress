<?php

/**
 * Implements hook_form_alter()
 *
 * Hide the title field. (It will be assigned a value on form submission.)
 */
function tracking_data_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'tracking_data_node_form') {
    $form['title']['#type'] = 'hidden';

    // Title field must have something in it to submit, but it will
    // be changed after submission.
    $form['title']['#value'] = 'title';
    $form['#submit'][] = '_tracking_data_form_submit';
    $form['#validate'][] = '_tracking_data_form_validate';

    // Change the title of the taxonomy field
    foreach ($form['taxonomy'] as $key => &$value) {
      if (is_numeric($key)) {
        $value['#title'] = t('Type');
      }
    }
  }
}

/**
 * Called on form submission. Set the title to a generated value.
 */
function _tracking_data_form_submit($form, &$form_state) {
  global $user;
  $username = $user->name;

  $date = $form_state['values']['field_data_date'][0]['value'];
  $date_string = strftime('%d %b %Y', $date);

  $form_state['values']['title'] = $username . ": data for " . $date_string;
}

/**
 * Form validation
 * The custom validation we do is to check and make sure that
 * the taxonomy terms selected are *child* terms -- i.e., they
 * have parent terms defined. This is because a separate
 * dataset is generated for each parent term (there are only
 * meant to be two levels of taxonomy terms). 
 *
 * Here's a silly example. Let's say you wanted to keep track
 * of how much code/documentation/tests you wrote (in lines)
 * in one graph, and how many calories throughout the day you
 * consumed in another graph. You might structure your terms
 * like:
 *
 * - Coding
 *   `- Lines of code
 *    - Lines of documentation
 *    - Lines of test
 * - Diet (calories)
 *   `- Breakfast
 *    - Lunch
 *    - Dinner
 *
 * We want to make sure the user checks "Breakfast", and not
 * "Diet"; and "Lines of code", and not "Coding".
 */
function _tracking_data_form_validate($form, &$form_state) {
  foreach($form_state['values']['taxonomy'] as $key => $value) {
    $tid = $value;
  }
  if ($tid) {
    $q = db_query("SELECT parent FROM {term_hierarchy} WHERE tid=%d", $tid);
    $r = db_fetch_object($q);

    // If the term has a parent value of 0 in the `term_hierarchy` table,
    // it's a 'top-level' term and is not allowed.
    if ($r->parent == 0) {
      form_set_error('taxonomy', t('Please specify a data type.'));
    }
  }
}
